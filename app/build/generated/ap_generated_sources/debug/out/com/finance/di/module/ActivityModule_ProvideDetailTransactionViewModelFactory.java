// Generated by Dagger (https://dagger.dev).
package com.finance.di.module;

import android.content.Context;
import com.finance.data.Repository;
import com.finance.ui.transaction.detail.TransactionDetailViewModel;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ActivityModule_ProvideDetailTransactionViewModelFactory implements Factory<TransactionDetailViewModel> {
  private final ActivityModule module;

  private final Provider<Repository> repositoryProvider;

  private final Provider<Context> applicationProvider;

  public ActivityModule_ProvideDetailTransactionViewModelFactory(ActivityModule module,
      Provider<Repository> repositoryProvider, Provider<Context> applicationProvider) {
    this.module = module;
    this.repositoryProvider = repositoryProvider;
    this.applicationProvider = applicationProvider;
  }

  @Override
  public TransactionDetailViewModel get() {
    return provideDetailTransactionViewModel(module, repositoryProvider.get(), applicationProvider.get());
  }

  public static ActivityModule_ProvideDetailTransactionViewModelFactory create(
      ActivityModule module, Provider<Repository> repositoryProvider,
      Provider<Context> applicationProvider) {
    return new ActivityModule_ProvideDetailTransactionViewModelFactory(module, repositoryProvider, applicationProvider);
  }

  public static TransactionDetailViewModel provideDetailTransactionViewModel(
      ActivityModule instance, Repository repository, Context application) {
    return Preconditions.checkNotNullFromProvides(instance.provideDetailTransactionViewModel(repository, application));
  }
}
