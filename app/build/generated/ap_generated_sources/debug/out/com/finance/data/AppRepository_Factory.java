// Generated by Dagger (https://dagger.dev).
package com.finance.data;

import com.finance.data.prefs.PreferencesService;
import com.finance.data.remote.ApiService;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppRepository_Factory implements Factory<AppRepository> {
  private final Provider<ApiService> apiServiceProvider;

  private final Provider<PreferencesService> mPreferencesHelperProvider;

  public AppRepository_Factory(Provider<ApiService> apiServiceProvider,
      Provider<PreferencesService> mPreferencesHelperProvider) {
    this.apiServiceProvider = apiServiceProvider;
    this.mPreferencesHelperProvider = mPreferencesHelperProvider;
  }

  @Override
  public AppRepository get() {
    return newInstance(apiServiceProvider.get(), mPreferencesHelperProvider.get());
  }

  public static AppRepository_Factory create(Provider<ApiService> apiServiceProvider,
      Provider<PreferencesService> mPreferencesHelperProvider) {
    return new AppRepository_Factory(apiServiceProvider, mPreferencesHelperProvider);
  }

  public static AppRepository newInstance(ApiService apiService,
      PreferencesService mPreferencesHelper) {
    return new AppRepository(apiService, mPreferencesHelper);
  }
}
