// Generated by data binding compiler. Do not edit!
package com.finance.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.app.AppCompatActivity;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.finance.R;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class LayoutHeaderTitleBinding extends ViewDataBinding {
  @NonNull
  public final ImageView buttonBack;

  @NonNull
  public final ImageView imgOther;

  @NonNull
  public final RelativeLayout layoutBack;

  @NonNull
  public final RelativeLayout layoutMain;

  @NonNull
  public final RelativeLayout layoutOther;

  @NonNull
  public final RelativeLayout layoutTitle;

  @NonNull
  public final TextView tvHeaderTitle;

  @Bindable
  protected String mTitle;

  @Bindable
  protected AppCompatActivity mA;

  @Bindable
  protected boolean mIsBack;

  protected LayoutHeaderTitleBinding(Object _bindingComponent, View _root, int _localFieldCount,
      ImageView buttonBack, ImageView imgOther, RelativeLayout layoutBack,
      RelativeLayout layoutMain, RelativeLayout layoutOther, RelativeLayout layoutTitle,
      TextView tvHeaderTitle) {
    super(_bindingComponent, _root, _localFieldCount);
    this.buttonBack = buttonBack;
    this.imgOther = imgOther;
    this.layoutBack = layoutBack;
    this.layoutMain = layoutMain;
    this.layoutOther = layoutOther;
    this.layoutTitle = layoutTitle;
    this.tvHeaderTitle = tvHeaderTitle;
  }

  public abstract void setTitle(@Nullable String title);

  @Nullable
  public String getTitle() {
    return mTitle;
  }

  public abstract void setA(@Nullable AppCompatActivity a);

  @Nullable
  public AppCompatActivity getA() {
    return mA;
  }

  public abstract void setIsBack(boolean isBack);

  public boolean getIsBack() {
    return mIsBack;
  }

  @NonNull
  public static LayoutHeaderTitleBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.layout_header_title, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static LayoutHeaderTitleBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<LayoutHeaderTitleBinding>inflateInternal(inflater, R.layout.layout_header_title, root, attachToRoot, component);
  }

  @NonNull
  public static LayoutHeaderTitleBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.layout_header_title, null, false, component)
   */
  @NonNull
  @Deprecated
  public static LayoutHeaderTitleBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<LayoutHeaderTitleBinding>inflateInternal(inflater, R.layout.layout_header_title, null, false, component);
  }

  public static LayoutHeaderTitleBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static LayoutHeaderTitleBinding bind(@NonNull View view, @Nullable Object component) {
    return (LayoutHeaderTitleBinding)bind(component, view, R.layout.layout_header_title);
  }
}
