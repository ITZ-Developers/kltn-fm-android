// Generated by data binding compiler. Do not edit!
package com.finance.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.chauthai.swipereveallayout.SwipeRevealLayout;
import com.finance.R;
import com.finance.data.model.api.response.notification.NotificationResponse;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class ItemNotificationBinding extends ViewDataBinding {
  @NonNull
  public final CardView cardView;

  @NonNull
  public final ImageView imgDelete;

  @NonNull
  public final FrameLayout layoutDelete;

  @NonNull
  public final RelativeLayout layoutNotification;

  @NonNull
  public final SwipeRevealLayout swipeRevealLayout;

  @NonNull
  public final TextView tvContent;

  @Bindable
  protected NotificationResponse mIvm;

  @Bindable
  protected String mSecretKey;

  @Bindable
  protected Boolean mPermissionDelete;

  protected ItemNotificationBinding(Object _bindingComponent, View _root, int _localFieldCount,
      CardView cardView, ImageView imgDelete, FrameLayout layoutDelete,
      RelativeLayout layoutNotification, SwipeRevealLayout swipeRevealLayout, TextView tvContent) {
    super(_bindingComponent, _root, _localFieldCount);
    this.cardView = cardView;
    this.imgDelete = imgDelete;
    this.layoutDelete = layoutDelete;
    this.layoutNotification = layoutNotification;
    this.swipeRevealLayout = swipeRevealLayout;
    this.tvContent = tvContent;
  }

  public abstract void setIvm(@Nullable NotificationResponse ivm);

  @Nullable
  public NotificationResponse getIvm() {
    return mIvm;
  }

  public abstract void setSecretKey(@Nullable String secretKey);

  @Nullable
  public String getSecretKey() {
    return mSecretKey;
  }

  public abstract void setPermissionDelete(@Nullable Boolean permissionDelete);

  @Nullable
  public Boolean getPermissionDelete() {
    return mPermissionDelete;
  }

  @NonNull
  public static ItemNotificationBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.item_notification, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static ItemNotificationBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<ItemNotificationBinding>inflateInternal(inflater, R.layout.item_notification, root, attachToRoot, component);
  }

  @NonNull
  public static ItemNotificationBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.item_notification, null, false, component)
   */
  @NonNull
  @Deprecated
  public static ItemNotificationBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<ItemNotificationBinding>inflateInternal(inflater, R.layout.item_notification, null, false, component);
  }

  public static ItemNotificationBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static ItemNotificationBinding bind(@NonNull View view, @Nullable Object component) {
    return (ItemNotificationBinding)bind(component, view, R.layout.item_notification);
  }
}
