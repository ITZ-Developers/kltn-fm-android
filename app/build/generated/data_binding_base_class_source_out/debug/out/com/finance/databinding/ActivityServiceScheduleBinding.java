// Generated by data binding compiler. Do not edit!
package com.finance.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import androidx.recyclerview.widget.RecyclerView;
import com.finance.R;
import com.finance.ui.service.schedule.ServiceScheduleActivity;
import com.finance.ui.service.schedule.ServiceScheduleViewModel;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class ActivityServiceScheduleBinding extends ViewDataBinding {
  @NonNull
  public final Button btnCreateServiceSchedule;

  @NonNull
  public final EditText editNameServiceSchedule;

  @NonNull
  public final LayoutHeaderTitleBinding layoutHeader;

  @NonNull
  public final LayoutEmptyDataBinding layoutNoData;

  @NonNull
  public final RecyclerView rcvServiceSchedules;

  @Bindable
  protected ServiceScheduleViewModel mVm;

  @Bindable
  protected ServiceScheduleActivity mA;

  protected ActivityServiceScheduleBinding(Object _bindingComponent, View _root,
      int _localFieldCount, Button btnCreateServiceSchedule, EditText editNameServiceSchedule,
      LayoutHeaderTitleBinding layoutHeader, LayoutEmptyDataBinding layoutNoData,
      RecyclerView rcvServiceSchedules) {
    super(_bindingComponent, _root, _localFieldCount);
    this.btnCreateServiceSchedule = btnCreateServiceSchedule;
    this.editNameServiceSchedule = editNameServiceSchedule;
    this.layoutHeader = layoutHeader;
    this.layoutNoData = layoutNoData;
    this.rcvServiceSchedules = rcvServiceSchedules;
  }

  public abstract void setVm(@Nullable ServiceScheduleViewModel vm);

  @Nullable
  public ServiceScheduleViewModel getVm() {
    return mVm;
  }

  public abstract void setA(@Nullable ServiceScheduleActivity a);

  @Nullable
  public ServiceScheduleActivity getA() {
    return mA;
  }

  @NonNull
  public static ActivityServiceScheduleBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.activity_service_schedule, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static ActivityServiceScheduleBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<ActivityServiceScheduleBinding>inflateInternal(inflater, R.layout.activity_service_schedule, root, attachToRoot, component);
  }

  @NonNull
  public static ActivityServiceScheduleBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.activity_service_schedule, null, false, component)
   */
  @NonNull
  @Deprecated
  public static ActivityServiceScheduleBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<ActivityServiceScheduleBinding>inflateInternal(inflater, R.layout.activity_service_schedule, null, false, component);
  }

  public static ActivityServiceScheduleBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static ActivityServiceScheduleBinding bind(@NonNull View view,
      @Nullable Object component) {
    return (ActivityServiceScheduleBinding)bind(component, view, R.layout.activity_service_schedule);
  }
}
